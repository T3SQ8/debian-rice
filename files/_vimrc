" Plugins{{{
call plug#begin('~/vimfiles/plugged')
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() } }
call plug#end()
"}}}

" Functions{{{
" Change font size
function! Fontsize()
	if &guifont ==# "Consolas:h14"
		set guifont=Consolas:h16
	elseif &guifont ==# "Consolas:h16"
		set guifont=Consolas:h18
	else
		set guifont=Consolas:h14
	endif
endfunction

" Change color scheme
function! Background()
	if &background == "light"
		set background=dark
	else
		set background=light
	endif
endfunction

" Compile Markdown
function! Compilemarkdown()
	set fileencoding=utf-8
	write
	!pandoc.exe % -o \%HOMEPATH\%\Desktop\tmp.docx
	set fileencoding=latin1
	write
endfunction

"}}}

" Settings{{{
" Color scheme
colorscheme solarized8
if strftime('%H') < 18 && strftime('%H') > 7
	set background=light
else
	set background=dark
endif

" Searching
set hlsearch ignorecase incsearch

" Font size
set guifont=Consolas:h14

" Lines
set number relativenumber ruler cursorline

" Matches using command-line completion
set wildmenu

" Open splits at the bottom and right
set splitbelow splitright

" Text wrapping
set nowrap

" Allow backspacing over indentation, line breaks and the start of insert
set backspace=indent,eol,start

" Enable mouse for normal, visual and command-line modes
set mouse=nvc

" Disable error sounds and flashing
autocmd GUIEnter * set visualbell t_vb=

" Folding
set foldmethod=marker

" Key timeout
set notimeout
"}}}

" Keybindings{{{
let mapleader=" "
nnoremap <leader>b :call Background()<cr>
nnoremap <leader>f :call Fontsize()<cr>
nnoremap <leader>w :set nowrap!<cr>
nnoremap <leader>sv :setlocal spell! spelllang=en_us<CR>
nnoremap <leader>en :setlocal spell! spelllang=sv<CR>
" nnoremap <leader>r :source $MYVIMRC<cr>
nnoremap <leader>n ]sz=
nnoremap <leader>p [sz=
vnoremap <c-c> "+y
inoremap <c-v> <esc>l"+Pa
nnoremap <c-a> ggVG

" Markdown
" autocmd Filetype markdown inoremap ;1 <Esc>?^#<cr>yy<c-o>P$ciw<c-r>=<c-r>"+1<cr><down>$$<cr><cr><++><up><up><left>
" autocmd Filetype markdown inoremap ;2 <Esc>?^#<cr>yy<c-o>P$ciw<c-r>=<c-r>"+1<cr><cr>a) <cr>b) $<++>$<cr>c) $<++>$<cr><down><++><Esc>?^a)<cr>A$$<left>
autocmd Filetype markdown inoremap <c-x> <Esc>/<++><cr>"_c4l
autocmd Filetype markdown noremap <silent> j gj
autocmd Filetype markdown noremap <silent> k gk
autocmd Filetype markdown noremap <leader>c :call Compilemarkdown()<cr>
autocmd Filetype markdown set wrap linebreak

" Disable keys
noremap <pageup> <nop>
noremap <pagedown> <nop>
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>
nnoremap <s-q> <nop>
nnoremap <space> <nop>
nnoremap q: <nop>
"}}}
